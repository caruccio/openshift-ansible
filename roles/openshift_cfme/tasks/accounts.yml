---
# This role task file is responsible for user/system account creation,
# and ensuring correct access is provided as required.

- name: See if an existing user exists
  oc_user:
    state: list
    username: tim
  register: cfme_if_tim_user_exists

- name: See if a non-existant user exists
  oc_user:
    state: list
    username: alicia

- name: What is the 'existing user check' result?
  debug:
    var: cfme_if_tim_user_exists


- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}

- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}


- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}



- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}

- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}

- name: "Ensure the CFME system users exist"
  oc_user:
    state: present
    username: "{{ item.name }}"
    full_name: "{{ item.description }}"
  with_items:
    - "{{ openshift_cfme_users }}"
  # when:
  #   - not cfme_if_tim_user_exists.results.0 == {}




# - name: cfme TODO
#   debug:
#     msg: TODO - Create the miq-sysadmin SCC from template before giving privs



# - name: "Ensure the CFME sysadmin SCC exists"
#   oc_obj:
#     state: present
#     template_name: miq-sysadmin
#     namespace: "{{ openshift_cfme_project }}"
#     kind: scc
#     files:
#       - "{{ template_dir }}/{{ item.pv_template }}"
#     create: True
#   run_once: True


# - name: "Ensure the CFME '{{ item.name }}' service account is privileged"
#   oc_adm_policy_user:
#     namespace: "{{ openshift_cfme_project }}"
#     user: "{{ item.name }}"
#     resource_kind: scc
#     resource_name: "{{ item.resource_kind }}"
#     state: present
#   with_items:
#     - "{{ openshift_cfme_users }}"
